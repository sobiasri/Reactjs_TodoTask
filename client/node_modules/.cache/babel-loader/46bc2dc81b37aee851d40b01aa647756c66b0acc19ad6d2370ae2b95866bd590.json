{"ast":null,"code":"var _jsxFileName = \"D:\\\\todotask\\\\client\\\\src\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  addTask\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('pending');\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTask({\n      title,\n      description,\n      status\n    });\n    setTitle('');\n    setDescription('');\n    setStatus('pending');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Task title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Task description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: status,\n      onChange: e => setStatus(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"To Do\",\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"in-progress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"z7det+sv2ZFl37ye4a+8uQhAa6A=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","addTask","_s","title","setTitle","description","setDescription","status","setStatus","handleSubmit","e","preventDefault","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/todotask/client/src/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TaskForm = ({ addTask }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('pending');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTask({ title, description, status });\r\n    setTitle('');\r\n    setDescription('');\r\n    setStatus('pending');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Task title\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        placeholder=\"Task description\"\r\n      />\r\n      <select value={status} onChange={(e) => setStatus(e.target.value)}>\r\n        <option value=\"To Do\">To Do</option>\r\n        <option value=\"in-progress\">In Progress</option>\r\n        <option value=\"completed\">Completed</option>\r\n      </select>\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EAE/C,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBV,OAAO,CAAC;MAAEE,KAAK;MAAEE,WAAW;MAAEE;IAAO,CAAC,CAAC;IACvCH,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;IAClBE,SAAS,CAAC,SAAS,CAAC;EACtB,CAAC;EAED,oBACET,OAAA;IAAMa,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC3Bd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEZ,KAAM;MACba,QAAQ,EAAGN,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFvB,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,WAAY;MACnBW,QAAQ,EAAGN,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MAChDG,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFvB,OAAA;MAAQgB,KAAK,EAAER,MAAO;MAACS,QAAQ,EAAGN,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MAAAF,QAAA,gBAChEd,OAAA;QAAQgB,KAAK,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpCvB,OAAA;QAAQgB,KAAK,EAAC,aAAa;QAAAF,QAAA,EAAC;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDvB,OAAA;QAAQgB,KAAK,EAAC,WAAW;QAAAF,QAAA,EAAC;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACTvB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAACpB,EAAA,CAnCIF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}