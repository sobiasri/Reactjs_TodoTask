{"ast":null,"code":"import React, { useState } from 'react';\n\n// const Task = ({ task, updateTask, deleteTask }) => {\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [newTitle, setNewTitle] = useState(task.title);\n//   const [newDescription, setNewDescription] = useState(task.description);\n//   const [newStatus, setNewStatus] = useState(task.status);\n\n//   const handleUpdate = () => {\n//     updateTask(task._id, { title: newTitle, description: newDescription, status: newStatus });\n//     setIsEditing(false);\n//   };\n\n//   return (\n//     <li>\n//       {isEditing ? (\n//         <>\n//           <input\n//             type=\"text\"\n//             value={newTitle}\n//             onChange={(e) => setNewTitle(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             value={newDescription}\n//             onChange={(e) => setNewDescription(e.target.value)}\n//           />\n//           <select value={newStatus} onChange={(e) => setNewStatus(e.target.value)}>\n//             <option value=\"To Do\">To Do</option>\n//             <option value=\"In Progress\">In Progress</option>\n//             <option value=\"Done\">Done</option>\n//           </select>\n//           <button onClick={handleUpdate}>Save</button>\n//         </>\n//       ) : (\n//         <>\n//           <span>{task.title}</span>\n//           <span>{task.description}</span>\n//           <span>{task.status}</span>\n//           <button onClick={() => setIsEditing(true)}>Edit</button>\n//         </>\n//       )}\n//       <button onClick={() => deleteTask(task._id)}>Delete</button>\n//     </li>\n//   );\n// };\n\nexport default Task;","map":{"version":3,"names":["React","useState","Task"],"sources":["D:/todotask/client/src/Task.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// const Task = ({ task, updateTask, deleteTask }) => {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [newTitle, setNewTitle] = useState(task.title);\r\n//   const [newDescription, setNewDescription] = useState(task.description);\r\n//   const [newStatus, setNewStatus] = useState(task.status);\r\n\r\n//   const handleUpdate = () => {\r\n//     updateTask(task._id, { title: newTitle, description: newDescription, status: newStatus });\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   return (\r\n//     <li>\r\n//       {isEditing ? (\r\n//         <>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={newTitle}\r\n//             onChange={(e) => setNewTitle(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             value={newDescription}\r\n//             onChange={(e) => setNewDescription(e.target.value)}\r\n//           />\r\n//           <select value={newStatus} onChange={(e) => setNewStatus(e.target.value)}>\r\n//             <option value=\"To Do\">To Do</option>\r\n//             <option value=\"In Progress\">In Progress</option>\r\n//             <option value=\"Done\">Done</option>\r\n//           </select>\r\n//           <button onClick={handleUpdate}>Save</button>\r\n//         </>\r\n//       ) : (\r\n//         <>\r\n//           <span>{task.title}</span>\r\n//           <span>{task.description}</span>\r\n//           <span>{task.status}</span>\r\n//           <button onClick={() => setIsEditing(true)}>Edit</button>\r\n//         </>\r\n//       )}\r\n//       <button onClick={() => deleteTask(task._id)}>Delete</button>\r\n//     </li>\r\n//   );\r\n// };\r\n\r\nexport default Task;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}